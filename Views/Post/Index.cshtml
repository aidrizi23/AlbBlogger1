@* $1$ @using AlbBlogger1.Data #1# *@
@* $1$ @using AlbBlogger1.Repositories.Pagination #1# *@
@* $1$ @using Microsoft.AspNetCore.Identity #1# *@
@* $1$ @model PaginatedList<Post> #1# *@
@* $1$ @inject UserManager<ApplicationUser> UserManager #1# *@
@* $1$ #1# *@
@* $1$ @{ #1# *@
@* $1$     ViewData["Title"] = "Latest Posts"; #1# *@
@* $1$     Layout = "~/Views/Shared/_Layout.cshtml"; #1# *@
@* $1$ } #1# *@
@* $1$ #1# *@
@* $1$ <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"> #1# *@
@* $1$ #1# *@
@* $1$ <style> #1# *@
@* $1$     .tweet-card { #1# *@
@* $1$         border: 1px solid #e1e8ed; #1# *@
@* $1$         border-radius: 12px; #1# *@
@* $1$         margin-bottom: 10px; #1# *@
@* $1$         transition: background-color 0.2s; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-card:hover { #1# *@
@* $1$         background-color: #f5f8fa; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-header { #1# *@
@* $1$         display: flex; #1# *@
@* $1$         align-items: center; #1# *@
@* $1$         margin-bottom: 10px; #1# *@
@* $1$     } #1# *@
@* $1$     .user-avatar { #1# *@
@* $1$         width: 48px; #1# *@
@* $1$         height: 48px; #1# *@
@* $1$         border-radius: 50%; #1# *@
@* $1$         margin-right: 10px; #1# *@
@* $1$     } #1# *@
@* $1$     .user-name { #1# *@
@* $1$         font-weight: bold; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-timestamp { #1# *@
@* $1$         color: #657786; #1# *@
@* $1$         font-size: 0.9em; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-content { #1# *@
@* $1$         margin-bottom: 10px; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-actions button { #1# *@
@* $1$         background: none; #1# *@
@* $1$         border: none; #1# *@
@* $1$         color: #657786; #1# *@
@* $1$         margin-right: 20px; #1# *@
@* $1$         cursor: pointer; #1# *@
@* $1$         transition: color 0.2s; #1# *@
@* $1$     } #1# *@
@* $1$     .tweet-actions button:hover { #1# *@
@* $1$         color: #1da1f2; #1# *@
@* $1$     } #1# *@
@* $1$     .create-tweet-btn { #1# *@
@* $1$         position: fixed; #1# *@
@* $1$         bottom: 20px; #1# *@
@* $1$         right: 20px; #1# *@
@* $1$         background-color: #1da1f2; #1# *@
@* $1$         color: white; #1# *@
@* $1$         border: none; #1# *@
@* $1$         border-radius: 50%; #1# *@
@* $1$         width: 60px; #1# *@
@* $1$         height: 60px; #1# *@
@* $1$         font-size: 24px; #1# *@
@* $1$         cursor: pointer; #1# *@
@* $1$         box-shadow: 0 2px 10px rgba(0,0,0,0.3); #1# *@
@* $1$     } #1# *@
@* $1$ </style> #1# *@
@* $1$ #1# *@
@* $1$ <div class="container mt-4"> #1# *@
@* $1$     <h1><i class="fab fa-twitter"></i> Latest Tweets</h1> #1# *@
@* $1$ #1# *@
@* $1$     @foreach (var post in Model) #1# *@
@* $1$     { #1# *@
@* $1$         <div class="card tweet-card" id="post-@post.Id"> #1# *@
@* $1$             <div class="card-body"> #1# *@
@* $1$                 <div class="tweet-header"> #1# *@
@* $1$                     <a href="@Url.Action("Details", "User", new { id = post.UserId })"> #1# *@
@* $1$                         <img src="https://via.placeholder.com/48" alt="User Avatar" class="user-avatar"> #1# *@
@* $1$                     </a> #1# *@
@* $1$                     <div> #1# *@
@* $1$                         <a href="@Url.Action("Details", "User", new { id = post.UserId })" class="user-name">@post.User.UserName</a> #1# *@
@* $1$                         <span class="tweet-timestamp">@post.PublishDate.ToString("MMM dd")</span> #1# *@
@* $1$                     </div> #1# *@
@* $1$                 </div> #1# *@
@* $1$                 <div class="tweet-content"> #1# *@
@* $1$                     <h5>@Html.DisplayFor(modelItem => post.Title)</h5> #1# *@
@* $1$                     <p>@Html.DisplayFor(modelItem => post.Content)</p> #1# *@
@* $1$                    #1# *@
@* $1$                     @if (post.Images != null && post.Images.Any()) #1# *@
@* $1$                     { #1# *@
@* $1$                     <div id="postCarousel-@post.Id" class="carousel slide" data-ride="carousel"> #1# *@
@* $1$                         <div class="carousel-inner"> #1# *@
@* $1$                             @for (int i = 0; i < post.Images.Count; i++) #1# *@
@* $1$                             { #1# *@
@* $1$                             <div class="carousel-item @(i == 0 ? "active" : "")"> #1# *@
@* $1$                                 <img src="@Url.Content($"/uploads/postImages/{post.Images[i]}")" alt="Post Image" class="d-block w-100"> #1# *@
@* $1$                             </div> #1# *@
@* $1$                             } #1# *@
@* $1$                         </div> #1# *@
@* $1$                         @if (post.Images.Count > 1) #1# *@
@* $1$                         { #1# *@
@* $1$                         <a class="carousel-control-prev" href="#postCarousel-@post.Id" role="button" data-slide="prev"> #1# *@
@* $1$                             <span class="carousel-control-prev-icon" aria-hidden="true"></span> #1# *@
@* $1$                             <span class="sr-only">Previous</span> #1# *@
@* $1$                         </a> #1# *@
@* $1$                         <a class="carousel-control-next" href="#postCarousel-@post.Id" role="button" data-slide="next"> #1# *@
@* $1$                             <span class="carousel-control-next-icon" aria-hidden="true"></span> #1# *@
@* $1$                             <span class="sr-only">Next</span> #1# *@
@* $1$                         </a> #1# *@
@* $1$                         } #1# *@
@* $1$                     </div> #1# *@
@* $1$                     } #1# *@
@* $1$                     else #1# *@
@* $1$                     { #1# *@
@* $1$                     <p>No images for this post.</p> #1# *@
@* $1$                     } #1# *@
@* $1$ #1# *@
@* $1$ #1# *@
@* $1$                 </div> #1# *@
@* $1$                 <div class="tweet-actions"> #1# *@
@* $1$                     <button onclick="incrementAndRedirect(@post.Id)" title="View"> #1# *@
@* $1$                         <i class="far fa-eye"></i> <span class="view-count">@post.Views</span> #1# *@
@* $1$                     </button> #1# *@
@* $1$                     <button class="like-button" data-post-id="@post.Id" title="Like"> #1# *@
@* $1$                         <i class="far fa-heart"></i> <span class="like-count">@post.Likes.Count</span> #1# *@
@* $1$                     </button> #1# *@
@* $1$                     <button class="bookmark-button" data-post-id="@post.Id" title="Bookmark"> #1# *@
@* $1$                         <i class="far fa-bookmark"></i> #1# *@
@* $1$                     </button> #1# *@
@* $1$                     @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) #1# *@
@* $1$                     { #1# *@
@* $1$                         <button onclick="location.href='@Url.Action("Edit", new { id = post.Id })'" title="Edit"> #1# *@
@* $1$                             <i class="far fa-edit"></i> #1# *@
@* $1$                         </button> #1# *@
@* $1$                         <button onclick="openDeleteConfirmation('@post.Id')" title="Delete"> #1# *@
@* $1$                             <i class="far fa-trash-alt"></i> #1# *@
@* $1$                         </button> #1# *@
@* $1$                     } #1# *@
@* $1$                 </div> #1# *@
@* $1$             </div> #1# *@
@* $1$         </div> #1# *@
@* $1$     } #1# *@
@* $1$ </div> #1# *@
@* $1$ #1# *@
@* $1$ <button class="create-tweet-btn" onclick="location.href='@Url.Action("Create")'"> #1# *@
@* $1$     <i class="fas fa-plus"></i> #1# *@
@* $1$ </button> #1# *@
@* $1$ #1# *@
@* $1$ <!-- Modal for Delete Confirmation --> #1# *@
@* $1$ <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true"> #1# *@
@* $1$     <div class="modal-dialog" role="document"> #1# *@
@* $1$         <div class="modal-content"> #1# *@
@* $1$             <div class="modal-header"> #1# *@
@* $1$                 <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5> #1# *@
@* $1$                 <button type="button" class="close" data-dismiss="modal" aria-label="Close"> #1# *@
@* $1$                     <span aria-hidden="true">&times;</span> #1# *@
@* $1$                 </button> #1# *@
@* $1$             </div> #1# *@
@* $1$             <div class="modal-body"> #1# *@
@* $1$                 Are you sure you want to delete this post? #1# *@
@* $1$             </div> #1# *@
@* $1$             <div class="modal-footer"> #1# *@
@* $1$                 <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button> #1# *@
@* $1$                 <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button> #1# *@
@* $1$             </div> #1# *@
@* $1$         </div> #1# *@
@* $1$     </div> #1# *@
@* $1$ </div> #1# *@
@* $1$ #1# *@
@* $1$ @section Scripts { #1# *@
@* $1$     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> #1# *@
@* $1$     <script> #1# *@
@* $1$     // Function to handle post liking #1# *@
@* $1$     function likePost(postId, button) { #1# *@
@* $1$         $.ajax({ #1# *@
@* $1$             url: '@Url.Action("LikePost", "Post")', #1# *@
@* $1$             type: 'POST', #1# *@
@* $1$             data: { postId: postId }, #1# *@
@* $1$             success: function(response) { #1# *@
@* $1$                 if (response.success) { #1# *@
@* $1$                     button.find('.like-count').text(response.likeCount); #1# *@
@* $1$                     // Optionally, change button appearance to indicate liked state #1# *@
@* $1$                     button.toggleClass('btn-outline-primary btn-primary'); #1# *@
@* $1$                 } else { #1# *@
@* $1$                     alert(response.message); #1# *@
@* $1$                 } #1# *@
@* $1$             }, #1# *@
@* $1$             error: function() { #1# *@
@* $1$                 alert("An error occurred while processing your request."); #1# *@
@* $1$             } #1# *@
@* $1$         }); #1# *@
@* $1$     } #1# *@
@* $1$ #1# *@
@* $1$     // Call likePost function on button click #1# *@
@* $1$     $('.like-button').click(function() { #1# *@
@* $1$         var postId = $(this).data('post-id'); #1# *@
@* $1$         likePost(postId, $(this)); #1# *@
@* $1$     }); #1# *@
@* $1$ #1# *@
@* $1$     // Function to handle post bookmarking #1# *@
@* $1$     function bookmarkPost(postId) { #1# *@
@* $1$         $.ajax({ #1# *@
@* $1$             url: '@Url.Action("BookmarkPost", "Post")', #1# *@
@* $1$             type: 'POST', #1# *@
@* $1$             data: { postId: postId }, #1# *@
@* $1$             success: function(response) { #1# *@
@* $1$                 if (response.success) { #1# *@
@* $1$                     alert(response.message); #1# *@
@* $1$                 } else { #1# *@
@* $1$                     alert("Error: " + response.message); #1# *@
@* $1$                 } #1# *@
@* $1$             }, #1# *@
@* $1$             error: function() { #1# *@
@* $1$                 alert("An error occurred while bookmarking the post."); #1# *@
@* $1$             } #1# *@
@* $1$         }); #1# *@
@* $1$     } #1# *@
@* $1$ #1# *@
@* $1$     // Call bookmarkPost function on button click #1# *@
@* $1$     $('.bookmark-button').click(function() { #1# *@
@* $1$         var postId = $(this).data('post-id'); #1# *@
@* $1$         bookmarkPost(postId); #1# *@
@* $1$     }); #1# *@
@* $1$ #1# *@
@* $1$     function openDeleteConfirmation(postId) { #1# *@
@* $1$         // Update form action with the correct post id #1# *@
@* $1$         $('#confirmDeleteButton').attr('onclick', 'deletePost(' + postId + ')'); #1# *@
@* $1$ #1# *@
@* $1$         // Show the modal #1# *@
@* $1$         $('#deleteConfirmationModal').modal('show'); #1# *@
@* $1$     } #1# *@
@* $1$ #1# *@
@* $1$     // Function to handle deleting a post #1# *@
@* $1$     function deletePost(postId) { #1# *@
@* $1$         $.ajax({ #1# *@
@* $1$             url: '@Url.Action("Delete", "Post")/' + postId, #1# *@
@* $1$             type: 'POST', #1# *@
@* $1$             dataType: 'json', #1# *@
@* $1$             success: function(response) { #1# *@
@* $1$                 if (response.success) { #1# *@
@* $1$                     $('#post-' + postId).remove(); #1# *@
@* $1$                     $('#deleteConfirmationModal').modal('hide'); #1# *@
@* $1$                     alert(response.message); // Optional: show a success message #1# *@
@* $1$                 } else { #1# *@
@* $1$                     alert(response.message || "An error occurred while deleting the post."); #1# *@
@* $1$                 } #1# *@
@* $1$             }, #1# *@
@* $1$             error: function(jqXHR, textStatus, errorThrown) { #1# *@
@* $1$                 console.error("AJAX error:", textStatus, errorThrown); #1# *@
@* $1$                 alert("An error occurred while deleting the post."); #1# *@
@* $1$             } #1# *@
@* $1$         }); #1# *@
@* $1$     } #1# *@
@* $1$ #1# *@
@* $1$     // Function to handle view count increment and redirection #1# *@
@* $1$     function incrementAndRedirect(postId) { #1# *@
@* $1$         $.ajax({ #1# *@
@* $1$             url: '@Url.Action("IncrementViewCount", "Post")', #1# *@
@* $1$             type: 'POST', #1# *@
@* $1$             data: { id: postId }, #1# *@
@* $1$             success: function(response) { #1# *@
@* $1$                 window.location.href = '@Url.Action("Details", "Post")/' + postId; #1# *@
@* $1$             }, #1# *@
@* $1$             error: function() { #1# *@
@* $1$                 console.log("An error occurred while incrementing the view count."); #1# *@
@* $1$             } #1# *@
@* $1$         }); #1# *@
@* $1$     } #1# *@
@* $1$ #1# *@
@* $1$     // Initialize Intersection Observer #1# *@
@* $1$     const observer = new IntersectionObserver((entries, observer) => { #1# *@
@* $1$         entries.forEach(entry => { #1# *@
@* $1$             if (entry.isIntersecting) { #1# *@
@* $1$                 const postId = entry.target.id.split('-')[1]; #1# *@
@* $1$                 incrementViewCount(postId); #1# *@
@* $1$                 observer.unobserve(entry.target); #1# *@
@* $1$             } #1# *@
@* $1$         }); #1# *@
@* $1$     }, { threshold: 0.5 }); #1# *@
@* $1$ #1# *@
@* $1$     // Observe each post element #1# *@
@* $1$     document.querySelectorAll('.tweet-card').forEach(card => { #1# *@
@* $1$         observer.observe(card); #1# *@
@* $1$     }); #1# *@
@* $1$     </script> #1# *@
@* $1$ } #1# *@
@* *@
@* *@
@* *@
@* *@
@* @using AlbBlogger1.Data *@
@* @using AlbBlogger1.Repositories.Pagination *@
@* @using Microsoft.AspNetCore.Identity *@
@* @model PaginatedList<Post> *@
@* @inject UserManager<ApplicationUser> UserManager *@
@* *@
@* @{ *@
@*     ViewData["Title"] = "Latest Posts"; *@
@*     Layout = "~/Views/Shared/_Layout.cshtml"; *@
@* } *@
@* *@
@* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"> *@
@* *@
@* <style> *@
@*     .tweet-card { *@
@*         border: 1px solid #e1e8ed; *@
@*         border-radius: 12px; *@
@*         margin-bottom: 10px; *@
@*         transition: background-color 0.2s; *@
@*     } *@
@*     .tweet-card:hover { *@
@*         background-color: #f5f8fa; *@
@*     } *@
@*     .tweet-header { *@
@*         display: flex; *@
@*         align-items: center; *@
@*         margin-bottom: 10px; *@
@*     } *@
@*     .user-avatar { *@
@*         width: 48px; *@
@*         height: 48px; *@
@*         border-radius: 50%; *@
@*         margin-right: 10px; *@
@*     } *@
@*     .user-name { *@
@*         font-weight: bold; *@
@*     } *@
@*     .tweet-timestamp { *@
@*         color: #657786; *@
@*         font-size: 0.9em; *@
@*     } *@
@*     .tweet-content { *@
@*         margin-bottom: 10px; *@
@*     } *@
@*     .tweet-actions button { *@
@*         background: none; *@
@*         border: none; *@
@*         color: #657786; *@
@*         margin-right: 20px; *@
@*         cursor: pointer; *@
@*         transition: color 0.2s; *@
@*     } *@
@*     .tweet-actions button:hover { *@
@*         color: #1da1f2; *@
@*     } *@
@*     .create-tweet-btn { *@
@*         position: fixed; *@
@*         bottom: 20px; *@
@*         right: 20px; *@
@*         background-color: #1da1f2; *@
@*         color: white; *@
@*         border: none; *@
@*         border-radius: 50%; *@
@*         width: 60px; *@
@*         height: 60px; *@
@*         font-size: 24px; *@
@*         cursor: pointer; *@
@*         box-shadow: 0 2px 10px rgba(0,0,0,0.3); *@
@*     } *@
@* </style> *@
@* *@
@* <div class="container mt-4"> *@
@*     <h1><i class="fab fa-twitter"></i> Latest Tweets</h1> *@
@* *@
@*     @foreach (var post in Model) *@
@*     { *@
@*         <div class="card tweet-card" id="post-@post.Id"> *@
@*             <div class="card-body"> *@
@*                 <div class="tweet-header"> *@
@*                     <a href="@Url.Action("Details", "User", new { id = post.UserId })"> *@
@*                         <img src="https://via.placeholder.com/48" alt="User Avatar" class="user-avatar"> *@
@*                     </a> *@
@*                     <div> *@
@*                         <a href="@Url.Action("Details", "User", new { id = post.UserId })" class="user-name">@post.User.UserName</a> *@
@*                         <span class="tweet-timestamp">@post.PublishDate.ToString("MMM dd")</span> *@
@*                     </div> *@
@*                 </div> *@
@*                 <div class="tweet-content"> *@
@*                     <h5>@Html.DisplayFor(modelItem => post.Title)</h5> *@
@*                     <p>@Html.DisplayFor(modelItem => post.Content)</p> *@
@* *@
@*                     $1$ @if (post.Images != null && post.Images.Any()) #1# *@
@*                     $1$ { #1# *@
@*                     $1$     <div id="postCarousel-@post.Id" class="carousel slide" data-ride="carousel"> #1# *@
@*                     $1$         <div class="carousel-inner"> #1# *@
@*                     $1$             @for (int i = 0; i < post.Images.Count; i++) #1# *@
@*                     $1$             { #1# *@
@*                     $1$                 <div class="carousel-item @(i == 0 ? "active" : "")"> #1# *@
@*                     $1$                     <img src="@Url.Content($"/uploads/postImages/{post.Images[i]}")" alt="Post Image" class="d-block w-100"> #1# *@
@*                     $1$                 </div> #1# *@
@*                     $1$             } #1# *@
@*                     $1$         </div> #1# *@
@*                     $1$         @if (post.Images.Count > 1) #1# *@
@*                     $1$         { #1# *@
@*                     $1$             <a class="carousel-control-prev" href="#postCarousel-@post.Id" role="button" data-slide="prev"> #1# *@
@*                     $1$                 <span class="carousel-control-prev-icon" aria-hidden="true"></span> #1# *@
@*                     $1$                 <span class="sr-only">Previous</span> #1# *@
@*                     $1$             </a> #1# *@
@*                     $1$             <a class="carousel-control-next" href="#postCarousel-@post.Id" role="button" data-slide="next"> #1# *@
@*                     $1$                 <span class="carousel-control-next-icon" aria-hidden="true"></span> #1# *@
@*                     $1$                 <span class="sr-only">Next</span> #1# *@
@*                     $1$             </a> #1# *@
@*                     $1$         } #1# *@
@*                     $1$     </div> #1# *@
@*                     $1$ } #1# *@
@*                     $1$ else #1# *@
@*                     $1$ { #1# *@
@*                     $1$     <p>No images for this post.</p> #1# *@
@*                     $1$ } #1# *@
@*                     @if (post.Images != null && post.Images.Any()) *@
@*                     { *@
@*                     <div id="postCarousel-@post.Id" class="carousel slide" data-ride="carousel"> *@
@*                         <div class="carousel-inner"> *@
@*                             @for (int i = 0; i < post.Images.Count; i++) *@
@*                             { *@
@*                             <div class="carousel-item @(i == 0 ? "active" : "")"> *@
@*                                 <img src="@Url.Content($"/uploads/postImages/{post.Images[i]}")" alt="Post Image" class="d-block w-100"> *@
@*                             </div> *@
@*                             } *@
@*                         </div> *@
@*                         @if (post.Images.Count > 1) *@
@*                         { *@
@*                         <a class="carousel-control-prev" href="#postCarousel-@post.Id" role="button" data-slide="prev"> *@
@*                             <span class="carousel-control-prev-icon" aria-hidden="true"></span> *@
@*                             <span class="sr-only">Previous</span> *@
@*                         </a> *@
@*                         <a class="carousel-control-next" href="#postCarousel-@post.Id" role="button" data-slide="next"> *@
@*                             <span class="carousel-control-next-icon" aria-hidden="true"></span> *@
@*                             <span class="sr-only">Next</span> *@
@*                         </a> *@
@*                         } *@
@*                     </div> *@
@*                     } *@
@*                      *@
@*                 </div> *@
@*                 <div class="tweet-actions"> *@
@*                     <button onclick="incrementAndRedirect(@post.Id)" title="View"> *@
@*                         <i class="far fa-eye"></i> <span class="view-count">@post.Views</span> *@
@*                     </button> *@
@*                     <button class="like-button" data-post-id="@post.Id" title="Like"> *@
@*                         <i class="far fa-heart"></i> <span class="like-count">@post.Likes.Count</span> *@
@*                     </button> *@
@*                     <button class="bookmark-button" data-post-id="@post.Id" title="Bookmark"> *@
@*                         <i class="far fa-bookmark"></i> *@
@*                     </button> *@
@*                     @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) *@
@*                     { *@
@*                         <button onclick="location.href='@Url.Action("Edit", new { id = post.Id })'" title="Edit"> *@
@*                             <i class="far fa-edit"></i> *@
@*                         </button> *@
@*                         <button onclick="openDeleteConfirmation('@post.Id')" title="Delete"> *@
@*                             <i class="far fa-trash-alt"></i> *@
@*                         </button> *@
@*                     } *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     } *@
@* </div> *@
@* *@
@* <button class="create-tweet-btn" onclick="location.href='@Url.Action("Create")'"> *@
@*     <i class="fas fa-plus"></i> *@
@* </button> *@
@* *@
@* <!-- Modal for Delete Confirmation --> *@
@* <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true"> *@
@*     <div class="modal-dialog" role="document"> *@
@*         <div class="modal-content"> *@
@*             <div class="modal-header"> *@
@*                 <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5> *@
@*                 <button type="button" class="close" data-dismiss="modal" aria-label="Close"> *@
@*                     <span aria-hidden="true">&times;</span> *@
@*                 </button> *@
@*             </div> *@
@*             <div class="modal-body"> *@
@*                 Are you sure you want to delete this post? *@
@*             </div> *@
@*             <div class="modal-footer"> *@
@*                 <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button> *@
@*                 <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@
@* @section Scripts { *@
@*     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@* <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script> *@
@*     <script> *@
@*         $(document).ready(function() { *@
@*             $('.carousel').carousel(); *@
@*         }); *@
@*     // Function to handle post liking *@
@*     function likePost(postId, button) { *@
@*         $.ajax({ *@
@*             url: '@Url.Action("LikePost", "Post")', *@
@*             type: 'POST', *@
@*             data: { postId: postId }, *@
@*             success: function(response) { *@
@*                 if (response.success) { *@
@*                     button.find('.like-count').text(response.likeCount); *@
@*                     // Optionally, change button appearance to indicate liked state *@
@*                     button.toggleClass('btn-outline-primary btn-primary'); *@
@*                 } else { *@
@*                     alert(response.message); *@
@*                 } *@
@*             }, *@
@*             error: function() { *@
@*                 alert("An error occurred while processing your request."); *@
@*             } *@
@*         }); *@
@*     } *@
@* *@
@*     // Call likePost function on button click *@
@*     $('.like-button').click(function() { *@
@*         var postId = $(this).data('post-id'); *@
@*         likePost(postId, $(this)); *@
@*     }); *@
@* *@
@*     // Function to handle post bookmarking *@
@*     function bookmarkPost(postId) { *@
@*         $.ajax({ *@
@*             url: '@Url.Action("BookmarkPost", "Post")', *@
@*             type: 'POST', *@
@*             data: { postId: postId }, *@
@*             success: function(response) { *@
@*                 if (response.success) { *@
@*                     alert(response.message); *@
@*                 } else { *@
@*                     alert("Error: " + response.message); *@
@*                 } *@
@*             }, *@
@*             error: function() { *@
@*                 alert("An error occurred while bookmarking the post."); *@
@*             } *@
@*         }); *@
@*     } *@
@* *@
@*     // Call bookmarkPost function on button click *@
@*     $('.bookmark-button').click(function() { *@
@*         var postId = $(this).data('post-id'); *@
@*         bookmarkPost(postId); *@
@*     }); *@
@* *@
@*     function openDeleteConfirmation(postId) { *@
@*         // Update form action with the correct post id *@
@*         $('#confirmDeleteButton').attr('onclick', 'deletePost(' + postId + ')'); *@
@* *@
@*         // Show the modal *@
@*         $('#deleteConfirmationModal').modal('show'); *@
@*     } *@
@* *@
@*     // Function to handle deleting a post *@
@*     function deletePost(postId) { *@
@*         $.ajax({ *@
@*             url: '@Url.Action("Delete", "Post")/' + postId, *@
@*             type: 'POST', *@
@*             dataType: 'json', *@
@*             success: function(response) { *@
@*                 if (response.success) { *@
@*                     $('#post-' + postId).remove(); *@
@*                     $('#deleteConfirmationModal').modal('hide'); *@
@*                     alert(response.message); // Optional: show a success message *@
@*                 } else { *@
@*                     alert(response.message || "An error occurred while deleting the post."); *@
@*                 } *@
@*             }, *@
@*             error: function(jqXHR, textStatus, errorThrown) { *@
@*                 console.error("AJAX error:", textStatus, errorThrown); *@
@*                 alert("An error occurred while deleting the post."); *@
@*             } *@
@*         }); *@
@*     } *@
@* *@
@*     // Function to handle view count increment and redirection *@
@*     function incrementAndRedirect(postId) { *@
@*         $.ajax({ *@
@*             url: '@Url.Action("IncrementViewCount", "Post")', *@
@*             type: 'POST', *@
@*             data: { id: postId }, *@
@*             success: function(response) { *@
@*                 window.location.href = '@Url.Action("Details", "Post")/' + postId; *@
@*             }, *@
@*             error: function() { *@
@*                 console.log("An error occurred while incrementing the view count."); *@
@*             } *@
@*         }); *@
@*     } *@
@* *@
@*     // Initialize Intersection Observer *@
@*     const observer = new IntersectionObserver((entries, observer) => { *@
@*         entries.forEach(entry => { *@
@*             if (entry.isIntersecting) { *@
@*                 const postId = entry.target.id.split('-')[1]; *@
@*                 incrementViewCount(postId); *@
@*                 observer.unobserve(entry.target); *@
@*             } *@
@*         }); *@
@*     }, { threshold: 0.5 }); *@
@* *@
@*     // Observe each post element *@
@*     document.querySelectorAll('.tweet-card').forEach(card => { *@
@*         observer.observe(card); *@
@*     }); *@
@* *@
@*     </script> *@
@* } *@

@using AlbBlogger1.Data
@using AlbBlogger1.Repositories.Pagination
@using Microsoft.AspNetCore.Identity
@model PaginatedList<Post>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Latest Tweets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #e6ecf0; /* Light gray background similar to Twitter */
    }
    .container {
        max-width: 600px; /* Limiting the width to resemble Twitter's content area */
    }
    .tweet-card {
        border: 1px solid #e1e8ed;
        border-radius: 15px;
        margin-bottom: 20px;
        background-color: white; /* White background for tweets */
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    .tweet-header {
        display: flex;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #e1e8ed;
    }
    .user-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        margin-right: 15px;
    }
    .user-name {
        font-weight: bold;
        color: #1da1f2; /* Twitter blue color */
    }
    .tweet-timestamp {
        color: #657786;
        font-size: 0.85em;
    }
    .tweet-content {
        padding: 10px;
    }
    .tweet-actions {
        padding: 10px;
        border-top: 1px solid #e1e8ed;
        display: flex;
        justify-content: space-between;
    }
    .tweet-actions button {
        background: none;
        border: none;
        color: #657786;
        cursor: pointer;
        transition: color 0.2s;
    }
    .tweet-actions button:hover {
        color: #1da1f2;
    }
    .tweet-actions i {
        margin-right: 5px;
    }
    .create-tweet-btn {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #1da1f2;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 24px;
        cursor: pointer;
        box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    }
    .carousel-inner img {
        width: 100%;
        height: auto; /* Ensure the image keeps its aspect ratio */
    }
    .carousel-control-prev-icon, .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5); /* Slightly visible background for controls */
        border-radius: 50%; /* Rounded controls */
    }
</style>

<div class="container mt-4">
    <h1 class="mb-4"><i class="fab fa-twitter"></i> Latest Tweets</h1>

    @foreach (var post in Model)
    {
        <div class="tweet-card" id="post-@post.Id">
            <div class="tweet-header">
                <a href="@Url.Action("Details", "User", new { id = post.UserId })">
                    <img src="https://via.placeholder.com/48" alt="User Avatar" class="user-avatar">
                </a>
                <div>
                    <a href="@Url.Action("Details", "User", new { id = post.UserId })" class="user-name">@post.User.UserName</a>
                    <span class="tweet-timestamp">@post.PublishDate.ToString("MMM dd, yyyy")</span>
                </div>
            </div>
            <div class="tweet-content">
                <h5>@Html.DisplayFor(modelItem => post.Title)</h5>
                <p>@Html.DisplayFor(modelItem => post.Content)</p>

                @if (post.Images != null && post.Images.Any())
                {
                    <div id="postCarousel-@post.Id" class="carousel slide" data-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < post.Images.Count; i++)
                            {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@Url.Content($"/uploads/postImages/{post.Images[i]}")" alt="Post Image" class="d-block">
                                </div>
                            }
                        </div>
                        @if (post.Images.Count > 1)
                        {
                            <a class="carousel-control-prev" href="#postCarousel-@post.Id" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#postCarousel-@post.Id" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        }
                    </div>
                }
            </div>
            <div class="tweet-actions">
                <button onclick="incrementAndRedirect(@post.Id)" title="View">
                    <i class="far fa-eye"></i> <span class="view-count">@post.Views</span>
                </button>
                <button class="like-button" data-post-id="@post.Id" title="Like">
                    <i class="far fa-heart"></i> <span class="like-count">@post.Likes.Count</span>
                </button>
                <button class="bookmark-button" data-post-id="@post.Id" title="Bookmark">
                    <i class="far fa-bookmark"></i>
                </button>
                @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId)
                {
                    <button onclick="location.href='@Url.Action("Edit", new { id = post.Id })'" title="Edit">
                        <i class="far fa-edit"></i>
                    </button>
                    <button onclick="openDeleteConfirmation('@post.Id')" title="Delete">
                        <i class="far fa-trash-alt"></i>
                    </button>
                }
            </div>
        </div>
    }
</div>

<button class="create-tweet-btn" onclick="location.href='@Url.Action("Create")'">
    <i class="fas fa-plus"></i>
</button>

<!-- Modal for Delete Confirmation -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this post?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Function to handle post liking
        function likePost(postId, button) {
            $.ajax({
                url: '@Url.Action("LikePost", "Post")',
                type: 'POST',
                data: { postId: postId },
                success: function(response) {
                    if (response.success) {
                        button.find('.like-count').text(response.likeCount);
                        button.toggleClass('text-danger'); // Change color to red when liked
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Call likePost function on button click
        $('.like-button').click(function() {
            var postId = $(this).data('post-id');
            likePost(postId, $(this));
        });

        // Function to handle post bookmarking
        function bookmarkPost(postId) {
            $.ajax({
                url: '@Url.Action("BookmarkPost", "Post")',
                type: 'POST',
                data: { postId: postId },
                success: function(response) {
                    if (response.success) {
                        alert(response.message);
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Call bookmarkPost function on button click
        $('.bookmark-button').click(function() {
            var postId = $(this).data('post-id');
            bookmarkPost(postId);
        });

        // Function to handle post view increment
        function incrementAndRedirect(postId) {
            $.ajax({
                url: '@Url.Action("IncrementViewCount", "Post")',
                type: 'POST',
                data: { id: postId },
                success: function() {
                    window.location.href = '@Url.Action("Details", "Post")/' + postId;
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Open delete confirmation modal
        function openDeleteConfirmation(postId) {
            $('#deleteConfirmationModal').modal('show');
            $('#confirmDeleteButton').data('post-id', postId);
        }

        // Confirm delete action
        $('#confirmDeleteButton').click(function() {
            var postId = $(this).data('post-id');
            $.ajax({
                url: '@Url.Action("Delete", "Post")',
                type: 'POST',
                data: { id: postId },
                success: function(response) {
                    if (response.success) {
                        $('#deleteConfirmationModal').modal('hide');
                        $('#post-' + postId).remove();
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while deleting the post.");
                }
            });
        });
    </script>
}

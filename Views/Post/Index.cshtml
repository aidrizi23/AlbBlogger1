@* $1$ $2$ @using AlbBlogger1.Data #2# #1# *@
@* $1$ $2$ @using AlbBlogger1.Repositories.Pagination #2# #1# *@
@* $1$ $2$ @model AlbBlogger1.Repositories.Pagination.PaginatedList<AlbBlogger1.Data.Post> #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ @{ #2# #1# *@
@* $1$ $2$     ViewData["Title"] = "Index"; #2# #1# *@
@* $1$ $2$     Layout = "~/Views/Shared/_Layout.cshtml"; #2# #1# *@
@* $1$ $2$ } #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ <h1>Index</h1> #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ <p> #2# #1# *@
@* $1$ $2$     <a asp-action="Create">Create New</a> #2# #1# *@
@* $1$ $2$ </p> #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ <div> #2# #1# *@
@* $1$ $2$     <form asp-action="FilterByHighestLikes" method="get"> #2# #1# *@
@* $1$ $2$         <button type="submit">Filter by Highest Likes</button> #2# #1# *@
@* $1$ $2$     </form> #2# #1# *@
@* $1$ $2$ </div> #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ <table class="table"> #2# #1# *@
@* $1$ $2$     <thead> #2# #1# *@
@* $1$ $2$     <tr> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Title #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Content #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             PublishDate #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Tags #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Likes #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Views #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             Image #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th> #2# #1# *@
@* $1$ $2$             UserId #2# #1# *@
@* $1$ $2$         </th> #2# #1# *@
@* $1$ $2$         <th></th> #2# #1# *@
@* $1$ $2$     </tr> #2# #1# *@
@* $1$ $2$     </thead> #2# #1# *@
@* $1$ $2$     <tbody> #2# #1# *@
@* $1$ $2$     @foreach (var item in Model) { #2# #1# *@
@* $1$ $2$         <tr id="post-row-@item.Id"> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Title) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Content) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.PublishDate) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Tags) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Likes) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Views) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.Image) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 @Html.DisplayFor(modelItem => item.UserId) #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$             <td> #2# #1# *@
@* $1$ $2$                 <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> | #2# #1# *@
@* $1$ $2$                 <a asp-action="Details" asp-route-id="@item.Id">Details</a> | #2# #1# *@
@* $1$ $2$                 <a href="javascript:void(0);" onclick="deletePost(@item.Id)">Delete</a> #2# #1# *@
@* $1$ $2$             </td> #2# #1# *@
@* $1$ $2$         </tr> #2# #1# *@
@* $1$ $2$     } #2# #1# *@
@* $1$ $2$     </tbody> #2# #1# *@
@* $1$ $2$ </table> #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$ <script> #2# #1# *@
@* $1$ $2$     function deletePost(postId) { #2# #1# *@
@* $1$ $2$         if (confirm("Are you sure you want to delete this post?")) { #2# #1# *@
@* $1$ $2$             $.ajax({ #2# #1# *@
@* $1$ $2$                 url: '/Post/Delete/' + postId, #2# #1# *@
@* $1$ $2$                 type: 'DELETE',  // Use 'POST' if DELETE isn't allowed or supported #2# #1# *@
@* $1$ $2$                 success: function (response) { #2# #1# *@
@* $1$ $2$                     if (response.success) { #2# #1# *@
@* $1$ $2$                         // Update UI here #2# #1# *@
@* $1$ $2$                         alert(response.message); // Optionally show a success message #2# #1# *@
@* $1$ $2$ #2# #1# *@
@* $1$ $2$                         // Remove the deleted row from the table #2# #1# *@
@* $1$ $2$                         $('#post-row-' + postId).remove(); #2# #1# *@
@* $1$ $2$                     } else { #2# #1# *@
@* $1$ $2$                         alert("Delete failed: " + response.message); // Handle failure if needed #2# #1# *@
@* $1$ $2$                     } #2# #1# *@
@* $1$ $2$                 }, #2# #1# *@
@* $1$ $2$                 error: function (xhr, status, error) { #2# #1# *@
@* $1$ $2$                     console.error('Error deleting post:', error); #2# #1# *@
@* $1$ $2$                     alert('Error deleting post.'); #2# #1# *@
@* $1$ $2$                 } #2# #1# *@
@* $1$ $2$             }); #2# #1# *@
@* $1$ $2$         } #2# #1# *@
@* $1$ $2$     } #2# #1# *@
@* $1$ $2$ </script> #2# #1# *@
@* $1$ #1# *@
@* $1$ #1# *@
@* $1$ @using AlbBlogger1.Data #1# *@
@* $1$ @using AlbBlogger1.Repositories.Pagination #1# *@
@* $1$ @using Microsoft.AspNetCore.Identity #1# *@
@* $1$ @using Microsoft.AspNetCore.Mvc.TagHelpers #1# *@
@* $1$ @model PaginatedList<Post> #1# *@
@* $1$ @inject UserManager<ApplicationUser> UserManager #1# *@
@* $1$ #1# *@
@* $1$ @{ #1# *@
@* $1$     ViewData["Title"] = "Index"; #1# *@
@* $1$     Layout = "~/Views/Shared/_Layout.cshtml"; #1# *@
@* $1$ } #1# *@
@* $1$ #1# *@
@* $1$ <h1>Latest Posts</h1> #1# *@
@* $1$ #1# *@
@* $1$ <p> #1# *@
@* $1$     <a asp-action="Create" class="btn btn-primary">Create New Post</a> #1# *@
@* $1$ </p> #1# *@
@* $1$ #1# *@
@* $1$ <div class="row"> #1# *@
@* $1$     <div class="col-md-12"> #1# *@
@* $1$         <form asp-action="FilterByHighestLikes" method="get"> #1# *@
@* $1$             <button type="submit" class="btn btn-secondary">Filter by Highest Likes</button> #1# *@
@* $1$         </form> #1# *@
@* $1$     </div> #1# *@
@* $1$ </div> #1# *@
@* $1$ #1# *@
@* $1$ <div class="row mt-3"> #1# *@
@* $1$     <div class="col-md-12"> #1# *@
@* $1$         @foreach (var post in Model) #1# *@
@* $1$         { #1# *@
@* $1$             <div class="card mb-3"> #1# *@
@* $1$                 <div class="card-body"> #1# *@
@* $1$                     <h5 class="card-title">@Html.DisplayFor(modelItem => post.Title)</h5> #1# *@
@* $1$                     <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p> #1# *@
@* $1$                     <p class="card-text"><small class="text-muted">Published on @Html.DisplayFor(modelItem => post.PublishDate)</small></p> #1# *@
@* $1$                     <p class="card-text"> #1# *@
@* $1$                         Tags: @Html.DisplayFor(modelItem => post.Tags) #1# *@
@* $1$                     </p> #1# *@
@* $1$                     <div class="d-flex justify-content-between align-items-center"> #1# *@
@* $1$                         <div class="btn-group"> #1# *@
@* $1$                             @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) #1# *@
@* $1$                             { #1# *@
@* $1$                                 <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">Edit</a> #1# *@
@* $1$                                 <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> #1# *@
@* $1$                             } #1# *@
@* $1$                             else #1# *@
@* $1$                             { #1# *@
@* $1$                                 <button type="button" class="btn btn-sm btn-outline-secondary disabled">Edit</button> #1# *@
@* $1$                                 <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> #1# *@
@* $1$                             } #1# *@
@* $1$                             @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) #1# *@
@* $1$                             { #1# *@
@* $1$                                 <a href="javascript:void(0);" onclick="deletePost(@post.Id)" class="btn btn-sm btn-outline-secondary">Delete</a> #1# *@
@* $1$                             } #1# *@
@* $1$                             else #1# *@
@* $1$                             { #1# *@
@* $1$                                 <button type="button" class="btn btn-sm btn-outline-secondary disabled">Delete</button> #1# *@
@* $1$                             } #1# *@
@* $1$                         </div> #1# *@
@* $1$                         <small class="text-muted">@post.Likes Likes @post.Views Views</small> #1# *@
@* $1$                     </div> #1# *@
@* $1$                 </div> #1# *@
@* $1$             </div> #1# *@
@* $1$         } #1# *@
@* $1$     </div> #1# *@
@* $1$ </div> #1# *@
@* $1$ #1# *@
@* $1$ @section Scripts { #1# *@
@* $1$ #1# *@
@* $1$ <script> #1# *@
@* $1$     function deletePost(postId) { #1# *@
@* $1$         if (confirm("Are you sure you want to delete this post?")) { #1# *@
@* $1$             $.ajax({ #1# *@
@* $1$                 url: '/Post/Delete/' + postId, #1# *@
@* $1$                 type: 'DELETE', #1# *@
@* $1$                 success: function (response) { #1# *@
@* $1$                     if (response.success) { #1# *@
@* $1$                         // Update UI here #1# *@
@* $1$                         alert(response.message); // Optionally show a success message #1# *@
@* $1$ #1# *@
@* $1$                         // Remove the deleted card from the feed #1# *@
@* $1$                         $('#post-card-' + postId).closest('.card.mb-3').remove(); #1# *@
@* $1$                     } else { #1# *@
@* $1$                         alert("Delete failed: " + response.message); // Handle failure if needed #1# *@
@* $1$                     } #1# *@
@* $1$                 }, #1# *@
@* $1$                 error: function (xhr, status, error) { #1# *@
@* $1$                     console.error('Error deleting post:', error); #1# *@
@* $1$                     alert('Error deleting post.'); #1# *@
@* $1$                 } #1# *@
@* $1$             }); #1# *@
@* $1$         } #1# *@
@* $1$     } #1# *@
@* $1$ </script> #1# *@
@* $1$ #1# *@
@* $1$ #1# *@
@* $1$ } #1# *@
@* *@
@* *@
@* $1$ @using AlbBlogger1.Data #1# *@
@* $1$ @using AlbBlogger1.Repositories.Pagination #1# *@
@* $1$ @using Microsoft.AspNetCore.Identity #1# *@
@* $1$ @model PaginatedList<Post> #1# *@
@* $1$ @inject UserManager<ApplicationUser> UserManager #1# *@
@* $1$ #1# *@
@* $1$ @{ #1# *@
@* $1$     ViewData["Title"] = "Index"; #1# *@
@* $1$     Layout = "~/Views/Shared/_Layout.cshtml"; #1# *@
@* $1$ } #1# *@
@* $1$ #1# *@
@* $1$ <h1>Latest Posts</h1> #1# *@
@* $1$ #1# *@
@* $1$ <p> #1# *@
@* $1$     <a asp-action="Create" class="btn btn-primary">Create New Post</a> #1# *@
@* $1$ </p> #1# *@
@* $1$ #1# *@
@* $1$ <div class="row"> #1# *@
@* $1$     <div class="col-md-12"> #1# *@
@* $1$         <form asp-action="FilterByHighestLikes" method="get"> #1# *@
@* $1$             <button type="submit" class="btn btn-secondary">Filter by Highest Likes</button> #1# *@
@* $1$         </form> #1# *@
@* $1$     </div> #1# *@
@* $1$ </div> #1# *@
@* $1$ #1# *@
@* $1$ <div class="row mt-3"> #1# *@
@* $1$     <div class="col-md-12"> #1# *@
@* $1$         @foreach (var post in Model) #1# *@
@* $1$         { #1# *@
@* $1$             <div class="card mb-3"> #1# *@
@* $1$                 <div class="card-body"> #1# *@
@* $1$                     <h5 class="card-title">@Html.DisplayFor(modelItem => post.Title)</h5> #1# *@
@* $1$                     <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p> #1# *@
@* $1$                     <p class="card-text"><small class="text-muted">Published on @Html.DisplayFor(modelItem => post.PublishDate)</small></p> #1# *@
@* $1$                     <p class="card-text"> #1# *@
@* $1$                         Tags: @Html.DisplayFor(modelItem => post.Tags) #1# *@
@* $1$                     </p> #1# *@
@* $1$                     <div class="d-flex justify-content-between align-items-center"> #1# *@
@* $1$                         <div class="btn-group"> #1# *@
@* $1$                             @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) #1# *@
@* $1$                             { #1# *@
@* $1$                                 <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">Edit</a> #1# *@
@* $1$                                 <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> #1# *@
@* $1$                                 <form asp-action="Delete" asp-route-id="@post.Id"> #1# *@
@* $1$                                     <input type="submit" value="Delete" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this post?');" /> #1# *@
@* $1$                                 </form> #1# *@
@* $1$                             } #1# *@
@* $1$                             else #1# *@
@* $1$                             { #1# *@
@* $1$                                 <button type="button" class="btn btn-sm btn-outline-secondary disabled">Edit</button> #1# *@
@* $1$                                 <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> #1# *@
@* $1$                             } #1# *@
@* $1$                         </div> #1# *@
@* $1$                         <small class="text-muted">@post.Likes Likes @post.Views Views</small> #1# *@
@* $1$                     </div> #1# *@
@* $1$                 </div> #1# *@
@* $1$             </div> #1# *@
@* $1$         } #1# *@
@* $1$     </div> #1# *@
@* $1$ </div> #1# *@
@* *@
@* *@
@* *@
@* *@
@* @using AlbBlogger1.Data *@
@* @using AlbBlogger1.Repositories.Pagination *@
@* @using Microsoft.AspNetCore.Identity *@
@* @model PaginatedList<Post> *@
@* @inject UserManager<ApplicationUser> UserManager *@
@* *@
@* @{ *@
@* ViewData["Title"] = "Index"; *@
@* Layout = "~/Views/Shared/_Layout.cshtml"; *@
@* } *@
@* *@
@* <h1>Latest Posts</h1> *@
@* *@
@* <p> *@
@*     <a asp-action="Create" class="btn btn-primary">Create New Post</a> *@
@* </p> *@
@* *@
@* <div class="row"> *@
@*     <div class="col-md-12"> *@
@*         <form asp-action="FilterByHighestLikes" method="get"> *@
@*             <button type="submit" class="btn btn-secondary">Filter by Highest Likes</button> *@
@*         </form> *@
@*     </div> *@
@* </div> *@
@* *@
@* <div class="row mt-3"> *@
@*     <div class="col-md-12"> *@
@*         @foreach (var post in Model) *@
@*         { *@
@*         <div class="card mb-3"> *@
@*             <div class="card-body"> *@
@*                 <h5 class="card-title">@Html.DisplayFor(modelItem => post.Title)</h5> *@
@*                 <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p> *@
@*                 <p class="card-text"><small class="text-muted">Published on @Html.DisplayFor(modelItem => post.PublishDate)</small></p> *@
@*                 <p class="card-text"> *@
@*                     Tags: @Html.DisplayFor(modelItem => post.Tags) *@
@*                 </p> *@
@*                 <div class="d-flex justify-content-between align-items-center"> *@
@*                     <div class="btn-group"> *@
@*                         @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId) *@
@*                         { *@
@*                         <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">Edit</a> *@
@*                         <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> *@
@*                         <button type="button" class="btn btn-sm btn-danger" onclick="openDeleteConfirmation(@post.Id)">Delete</button> *@
@*                         } *@
@*                         else *@
@*                         { *@
@*                         <button type="button" class="btn btn-sm btn-outline-secondary disabled">Edit</button> *@
@*                         <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a> *@
@*                         } *@
@*                     </div> *@
@*                     <small class="text-muted">@post.Likes Likes @post.Views Views</small> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*         } *@
@*     </div> *@
@* </div> *@
@* *@
@* <!-- Modal for Delete Confirmation --> *@
@* <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true"> *@
@*     <div class="modal-dialog" role="document"> *@
@*         <div class="modal-content"> *@
@*             <div class="modal-header"> *@
@*                 <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5> *@
@*                 <button type="button" class="close" data-dismiss="modal" aria-label="Close"> *@
@*                     <span aria-hidden="true">&times;</span> *@
@*                 </button> *@
@*             </div> *@
@*             <div class="modal-body"> *@
@*                 <h3>Are you sure you want to delete this post?</h3> *@
@*                 <div> *@
@*                     <h4>Title: <span id="deletePostTitle"></span></h4> *@
@*                     <p>Content: <span id="deletePostContent"></span></p> *@
@*                     <p>Published on: <span id="deletePostPublishDate"></span></p> *@
@*                     <p>Tags: <span id="deletePostTags"></span></p> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="modal-footer"> *@
@*                 <form id="deletePostForm" method="post"> *@
@*                     @Html.AntiForgeryToken() *@
@*                     <button type="submit" class="btn btn-danger">Delete</button> *@
@*                     <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button> *@
@*                 </form> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@
@* *@
@* <script> *@
@*     function openDeleteConfirmation(postId) { *@
@*         $.ajax({ *@
@*             url: '/Post/GetPostDetailsForDelete/' + postId, *@
@*             type: 'GET', *@
@*             success: function (data) { *@
@*                 $('#deletePostTitle').text(data.title); *@
@*                 $('#deletePostContent').text(data.content); *@
@*                 $('#deletePostPublishDate').text(data.publishDate); *@
@*                 $('#deletePostTags').text(data.tags); *@
@* *@
@*                 // Update form action with the correct post id *@
@*                 $('#deletePostForm').attr('action', '/Post/DeleteConfirmed/' + postId); *@
@* *@
@*                 // Show the modal *@
@*                 $('#deleteConfirmationModal').modal('show'); *@
@*             }, *@
@*             error: function (xhr, status, error) { *@
@*                 console.error('Error fetching post details for delete:', error); *@
@*                 alert('Error fetching post details for delete.'); *@
@*             } *@
@*         }); *@
@*     } *@
@* </script> *@
@* *@


@using AlbBlogger1.Data
@using AlbBlogger1.Repositories.Pagination
@using Microsoft.AspNetCore.Identity
@model PaginatedList<Post>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Latest Posts</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Post</a>
</p>

<div class="row">
    <div class="col-md-12">
        <form asp-action="FilterByHighestLikes" method="get">
            <button type="submit" class="btn btn-secondary">Filter by Highest Likes</button>
        </form>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-12">
        @foreach (var post in Model)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => post.Title)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => post.Content)</p>
                    <p class="card-text"><small class="text-muted">Published on @Html.DisplayFor(modelItem => post.PublishDate)</small></p>
                    <p class="card-text">
                        Tags: @Html.DisplayFor(modelItem => post.Tags)
                    </p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId)
                            {
                                <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a>
                                <button type="button" class="btn btn-sm btn-danger" onclick="openDeleteConfirmation('@post.Id', '@post.Title', '@post.Content', '@post.PublishDate', '@post.Tags')">Delete</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-sm btn-outline-secondary disabled">Edit</button>
                                <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary">View</a>
                            }
                        </div>
                        <small class="text-muted">@post.Likes Likes @post.Views Views</small>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal for Delete Confirmation -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3>Are you sure you want to delete this post?</h3>
                <div>
                    <h4>Title: <span id="deletePostTitle"></span></h4>
                    <p>Content: <span id="deletePostContent"></span></p>
                    <p>Published on: <span id="deletePostPublishDate"></span></p>
                    <p>Tags: <span id="deletePostTags"></span></p>
                </div>
            </div>
            <div class="modal-footer">
                <form id="deletePostForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openDeleteConfirmation(postId, title, content, publishDate, tags) {
            // Update modal with post details
            $('#deletePostTitle').text(title);
            $('#deletePostContent').text(content);
            $('#deletePostPublishDate').text(publishDate);
            $('#deletePostTags').text(tags);

            // Update form action with the correct post id
            $('#deletePostForm').attr('action', '/Post/DeleteConfirmed/' + postId);

            // Show the modal
            $('#deleteConfirmationModal').modal('show');
        }
    </script>
}

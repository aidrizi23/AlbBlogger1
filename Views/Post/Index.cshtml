
@using AlbBlogger1.Data
@using AlbBlogger1.Repositories.Pagination
@using Microsoft.AspNetCore.Identity
@model PaginatedList<Post>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Latest Tweets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #e6ecf0; /* Light gray background similar to Twitter */
    }
    .container {
        max-width: 600px; /* Limiting the width to resemble Twitter's content area */
    }
    .tweet-card {
        border: 1px solid #e1e8ed;
        border-radius: 15px;
        margin-bottom: 20px;
        background-color: white; /* White background for tweets */
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    .tweet-header {
        display: flex;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #e1e8ed;
    }
    .user-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        margin-right: 15px;
    }
    .user-name {
        font-weight: bold;
        color: #1da1f2; /* Twitter blue color */
    }
    .tweet-timestamp {
        color: #657786;
        font-size: 0.85em;
    }
    .tweet-content {
        padding: 10px;
    }
    .tweet-actions {
        padding: 10px;
        border-top: 1px solid #e1e8ed;
        display: flex;
        justify-content: space-between;
    }
    .tweet-actions button {
        background: none;
        border: none;
        color: #657786;
        cursor: pointer;
        transition: color 0.2s;
    }
    .tweet-actions button:hover {
        color: #1da1f2;
    }
    .tweet-actions i {
        margin-right: 5px;
    }
    .create-tweet-btn {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #1da1f2;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 24px;
        cursor: pointer;
        box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    }
    .carousel-inner img {
        width: 100%;
        height: auto; /* Ensure the image keeps its aspect ratio */
    }
    .carousel-control-prev-icon, .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5); /* Slightly visible background for controls */
        border-radius: 50%; /* Rounded controls */
    }
</style>

<div class="container mt-4">
    <h1 class="mb-4"><i class="fab fa-twitter"></i> Latest Tweets</h1>

    @foreach (var post in Model)
    {
        <div class="tweet-card" id="post-@post.Id">
            <div class="tweet-header">
                <a href="@Url.Action("Details", "User", new { id = post.UserId })">
                    <img src="https://via.placeholder.com/48" alt="User Avatar" class="user-avatar">
                </a>
                <div>
                    <a href="@Url.Action("Details", "User", new { id = post.UserId })" class="user-name">@post.User.UserName</a>
                    <span class="tweet-timestamp">@post.PublishDate.ToString("MMM dd, yyyy")</span>
                </div>
            </div>
            <div class="tweet-content">
                <h5>@Html.DisplayFor(modelItem => post.Title)</h5>
                <p>@Html.DisplayFor(modelItem => post.Content)</p>

                @if (post.Images != null && post.Images.Any())
                {
                    <div id="postCarousel-@post.Id" class="carousel slide" data-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < post.Images.Count; i++)
                            {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@Url.Content($"/uploads/postImages/{post.Images[i]}")" alt="Post Image" class="d-block">
                                </div>
                            }
                        </div>
                        @if (post.Images.Count > 1)
                        {
                            <a class="carousel-control-prev" href="#postCarousel-@post.Id" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#postCarousel-@post.Id" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        }
                    </div>
                }
            </div>
            <div class="tweet-actions">
                <button onclick="incrementAndRedirect(@post.Id)" title="View">
                    <i class="far fa-eye"></i> <span class="view-count">@post.Views</span>
                </button>
                <button class="like-button" data-post-id="@post.Id" title="Like">
                    <i class="far fa-heart"></i> <span class="like-count">@post.Likes.Count</span>
                </button>
                <button class="bookmark-button" data-post-id="@post.Id" title="Bookmark">
                    <i class="far fa-bookmark"></i>
                </button>
                @if (User.Identity.IsAuthenticated && UserManager.GetUserId(User) == post.UserId)
                {
                    <button onclick="location.href='@Url.Action("Edit", new { id = post.Id })'" title="Edit">
                        <i class="far fa-edit"></i>
                    </button>
                    <button onclick="openDeleteConfirmation('@post.Id')" title="Delete">
                        <i class="far fa-trash-alt"></i>
                    </button>
                }
            </div>
        </div>
    }
</div>

<button class="create-tweet-btn" onclick="location.href='@Url.Action("Create")'">
    <i class="fas fa-plus"></i>
</button>

<!-- Modal for Delete Confirmation -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this post?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Function to handle post liking
        function likePost(postId, button) {
            $.ajax({
                url: '@Url.Action("LikePost", "Post")',
                type: 'POST',
                data: { postId: postId },
                success: function(response) {
                    if (response.success) {
                        button.find('.like-count').text(response.likeCount);
                        button.toggleClass('text-danger'); // Change color to red when liked
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Call likePost function on button click
        $('.like-button').click(function() {
            var postId = $(this).data('post-id');
            likePost(postId, $(this));
        });

        // Function to handle post bookmarking
        function bookmarkPost(postId) {
            $.ajax({
                url: '@Url.Action("BookmarkPost", "Post")',
                type: 'POST',
                data: { postId: postId },
                success: function(response) {
                    if (response.success) {
                        alert(response.message);
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Call bookmarkPost function on button click
        $('.bookmark-button').click(function() {
            var postId = $(this).data('post-id');
            bookmarkPost(postId);
        });

        // Function to handle post view increment
        function incrementAndRedirect(postId) {
            $.ajax({
                url: '@Url.Action("IncrementViewCount", "Post")',
                type: 'POST',
                data: { id: postId },
                success: function() {
                    window.location.href = '@Url.Action("Details", "Post")/' + postId;
                },
                error: function() {
                    alert("An error occurred while processing your request.");
                }
            });
        }

        // Open delete confirmation modal
        function openDeleteConfirmation(postId) {
            $('#deleteConfirmationModal').modal('show');
            $('#confirmDeleteButton').data('post-id', postId);
        }

        // Confirm delete action
        $('#confirmDeleteButton').click(function() {
            var postId = $(this).data('post-id');
            $.ajax({
                url: '@Url.Action("Delete", "Post")',
                type: 'POST',
                data: { id: postId },
                success: function(response) {
                    if (response.success) {
                        $('#deleteConfirmationModal').modal('hide');
                        $('#post-' + postId).remove();
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function() {
                    alert("An error occurred while deleting the post.");
                }
            });
        });
    </script>
}

@using AlbBlogger1.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PostDetailsViewModel
@inject UserManager<ApplicationUser> UserManager
@Html.AntiForgeryToken()
@{
ViewData["Title"] = "Details";
}

<div class="container mt-4">
    @if (Model?.Post != null)
    {
    <div class="card tweet-card">
        <div class="card-body">
            <div class="tweet-header">
                <img src="https://via.placeholder.com/48" alt="User Avatar" class="user-avatar">
                <div>
                    <span class="user-name">@Model.Post.User?.UserName</span>
                    <span class="tweet-timestamp">@Model.Post.PublishDate.ToString("MMM dd")</span>
                </div>
            </div>
            <div class="tweet-content mt-3">
                <h5>@Model.Post.Title</h5>
                <p>@Model.Post.Content</p>
                @if (Model.Post.Images != null && Model.Post.Images.Any())
                {
                <div id="postCarousel-@Model.Post.Id" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.Post.Images.Count; i++)
                        {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img src="@Url.Content($"/uploads/postImages/{Model.Post.Images[i]}")" alt="Post Image" class="d-block">
                        </div>
                        }
                    </div>
                    @if (Model.Post.Images.Count > 1)
                    {
                    <a class="carousel-control-prev" href="#postCarousel-@Model.Post.Id" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#postCarousel-@Model.Post.Id" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                    }
                </div>
                }
            </div>
            <div class="tweet-stats mt-3">
                <span title="Views"><i class="far fa-eye"></i> @Model.Post.Views</span>
                <span title="Likes"><i class="far fa-heart"></i> @Model.Post.LikeCount</span>
                <span title="Replies"><i class="far fa-comment"></i> @(Model.Replies?.Count() ?? 0)</span>
            </div>
            <!-- Add tweet actions here (like, bookmark, etc.) -->
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Reply to this tweet</h5>
            @if (User.Identity.IsAuthenticated)
            {
            <form asp-action="CreateReply" asp-route-postId="@Model.Post.Id" method="post">
                <div class="form-group">
                    <textarea name="content" class="form-control" rows="3" required placeholder="Write your reply..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Reply</button>
            </form>
            }
            else
            {
            <p>Please <a asp-area="Identity" asp-page="/Account/Login">log in</a> to reply.</p>
            }
        </div>
    </div>

    <h5 class="mt-4">Replies</h5>
    @if (Model.Replies != null && Model.Replies.Any())
    {
    @await Html.PartialAsync("_RepliesPartial", Model.Replies.Where(r => r.ParentReplyId == null).OrderByDescending(r => r.CreatedAt).ToList())
    }
    else
    {
    <p>No replies yet.</p>
    }
    }
    else
    {
    <p>Tweet not found.</p>
    }
</div>


@section Scripts {
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    function getAntiForgeryToken() {
        return $('input[name="__RequestVerificationToken"]').val();
    }

    function toggleReplyForm(replyId) {
        $('#replyForm' + replyId).toggle();
    }

    function submitReply(event, parentReplyId, postId) {
        event.preventDefault();
        var form = event.target;
        var content = form.querySelector('textarea[name="content"]').value;

        $.ajax({
            url: '@Url.Action("CreateReplyForReply", "Post")',
            type: 'POST',
            data: {
                parentReplyId: parentReplyId,
                postId: postId,
                content: content,
                __RequestVerificationToken: getAntiForgeryToken()
            },
            success: function(response) {
                if (response.success) {
                    var newReplyHtml = createReplyHtml(response);
                    var $parentReply = $('#reply-' + parentReplyId);
                    var $childReplies = $('#childReplies-' + parentReplyId);

                    if ($childReplies.length === 0) {
                        $childReplies = $('<div id="childReplies-' + parentReplyId + '" class="ml-4 mt-2"></div>');
                        $parentReply.append($childReplies);
                    }

                    $childReplies.prepend(newReplyHtml);
                    $childReplies.show();

                    form.reset();
                    toggleReplyForm(parentReplyId);
                } else {
                    alert(response.message || "An error occurred while processing your request.");
                }
            },
            error: function(xhr, status, error) {
                console.error(xhr.responseText);
                alert("An error occurred while processing your request. Please try again.");
            }
        });
    }

    function createReplyHtml(reply) {
        return `
        <div class="tweet-card mt-2" id="reply-${reply.replyId}" data-post-id="${reply.postId}">
            <div class="tweet-content">
                <div class="tweet-header">
                    <img src="https://via.placeholder.com/32" alt="User Avatar" class="user-avatar-small">
                    <div>
                        <span class="user-name">${reply.userName}</span>
                        <span class="tweet-timestamp">Just now</span>
                    </div>
                </div>
                <p>${reply.content}</p>
            </div>
            <div class="tweet-actions">
                <button class="btn btn-sm btn-link" onclick="toggleReplyForm(${reply.replyId})">
                    <i class="far fa-comment"></i> Reply
                </button>
            </div>
            <div id="replyForm${reply.replyId}" style="display: none;" class="mt-2">
                <form onsubmit="submitReply(event, ${reply.replyId}, ${reply.postId})">
                    <div class="form-group">
                        <textarea name="content" class="form-control" rows="2" required placeholder="Write your reply..."></textarea>
                    </div>
                    <button type="submit" class="btn btn-sm btn-primary">Submit Reply</button>
                </form>
            </div>
            <div id="childReplies-${reply.replyId}" class="ml-4 mt-2"></div>
        </div>
    `;
    }

    // Handle main post reply form submission
    $(document).ready(function() {
        $('#mainReplyForm').on('submit', function(e) {
            e.preventDefault();
            var postId = $(this).data('post-id');
            var content = $(this).find('textarea[name="content"]').val();

            $.ajax({
                url: '@Url.Action("CreateReplyForReply", "Post")',
                type: 'POST',
                data: {
                    parentReplyId: null,
                    postId: postId,
                    content: content,
                    __RequestVerificationToken: getAntiForgeryToken()
                },
                success: function(response) {
                    if (response.success) {
                        var newReplyHtml = createReplyHtml(response);
                        $('#repliesContainer').prepend(newReplyHtml);
                        $('#mainReplyForm')[0].reset();
                    } else {
                        alert(response.message || "An error occurred while processing your request.");
                    }
                },
                error: function(xhr, status, error) {
                    console.error(xhr.responseText);
                    alert("An error occurred while processing your request. Please try again.");
                }
            });
        });
    });
</script>
}


<style>
    /*.carousel-inner img {*/
    /*    width: 100%;*/
    /*    height: auto; !* Ensure the image keeps its aspect ratio *!*/
    /*}*/
    /*.carousel-control-prev-icon, .carousel-control-next-icon {*/
    /*    background-color: rgba(0, 0, 0, 0.5); !* Slightly visible background for controls *!*/
    /*    border-radius: 50%; !* Rounded controls *!*/
    /*}*/
    .tweet-card {
        border: 1px solid #e1e8ed;
        border-radius: 12px;
        padding: 12px;
        margin-bottom: 12px;
        background-color: white;
    }

    .tweet-header {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }

    .user-avatar-small {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        margin-right: 12px;
    }

    .user-name {
        font-weight: bold;
        margin-right: 4px;
    }

    .tweet-timestamp {
        color: #657786;
        font-size: 0.9em;
    }

    .tweet-content p {
        margin-bottom: 12px;
    }

    .tweet-actions {
        display: flex;
        justify-content: flex-start;
        color: #657786;
    }

    .tweet-actions button {
        color: #657786;
        margin-right: 16px;
    }

    .tweet-actions button:hover {
        color: #1da1f2;
    }
    
</style>

